import base64

def chunks(lst, n):
    for i in range(0, len(lst), n):
        yield lst[i:i+n]

in_file = open("crack_b64_stage_one.py", "rb")
data = in_file.read()
in_file.read()

secretCode = base64.b64encode(data)
chunked_code = list(chunks(secretCode, 4))
print(chunked_code)

out_file = open("crack_b64_stage_two.py", "w")
count = 1
out_file.write("dummy_dict={\n")
for chunk in chunked_code:
    out_file.write(f"{count}:{chunk},\n")
    count += 1
out_file.write("}\n")
out_file.write("import base64\n")
#b''.join(dummy_dict.values())
out_file.write("eval(compile(base64.b64decode(b''.join(dummy_dict.values())), '<string>', 'exec'))")

out_file.close()